<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		">
	
	<!-- springData Redis 核心api-->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<!-- 设置key的序列化方式 -->
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
		<!-- 设置value的序列化方式 -->
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
		<!-- 注入连接工厂 -->
		<property name="connectionFactory" ref="connectionFactory"></property>
	</bean>
	
	<!-- 创建connectionFactory交给spring容器管理 -->
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="192.168.85.128"></property>
		<property name="port" value="6379"></property>
		<property name="database" value="0"></property>
		<property name="poolConfig" ref="poolConfig"></property>
	</bean>
	
	<!-- 创建连接池的基本配置 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="50"></property>
		<property name="maxIdle" value="10"></property>
		<property name="minIdle" value="30"></property>
	</bean>
	
	<!-- 配置处理消息的消息监听适配器 -->
	<bean id="messageListener" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
		<!-- 构造方法注入：自定义的消息监听 -->
		<constructor-arg>
			<bean class="cn.sgxy.listener.RedisMessageListener"></bean>
		</constructor-arg>
	</bean>
	
	<!-- 消息监听者容器：对所有的消息进行统一管理 -->
	<bean id="redisContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"></property>
		<property name="messageListeners">
			<map>
				<!-- 配置频道与监听器
	    			将此频道中的内容交由此监听器处理
	    			key-ref：监听，处理消息
	    			ChannelTopic：订阅的消息频道
	    		 -->
				<entry key-ref="messageListener">
					<list>
						<bean class="org.springframework.data.redis.listener.ChannelTopic">
							<constructor-arg value="ITCAST"></constructor-arg>
						</bean>
					</list>
				</entry>
			</map>
		</property>
	</bean>
	 
	
		
</beans>